{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortAlphabet","ALPHABET","sortByLength","LENGTH","reset","this","data","goods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GACZ,MAAO,CACLC,YAAaD,EAAMC,gBAT3B,EAcEK,aAAe,WACb,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAhBzB,EAoBEC,aAAe,WACb,EAAKH,SAAS,CACZH,SAAUL,EAASY,UAtBzB,EA0BEC,MAAQ,WACN,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KA7BlB,4CAiCE,WAAU,IAAD,OACP,EAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAlEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQf,GACN,IAAK,OAML,QACE,OAAO,EALT,IAAK,WACH,OAAOc,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,WAMtBlB,GACFa,EAAaV,UAGRU,EA2CQM,CAAkBtB,EAAiB,CAAEI,WAAUD,eAE5D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYrB,IAAaL,EAASU,WAGxCiB,QAAS,WACP,EAAKlB,gBATT,iCAeA,wBACEgB,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYrB,IAAaL,EAASY,SAGxCe,QAAS,WACP,EAAKhB,gBATT,4BAeA,wBACEc,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,YAAatB,IAGnBuB,QAAS,WACP,EAAKpB,WATT,sBAgBGF,IAAaL,EAASM,MAAQF,IAE7B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKd,SAJT,sBAaN,6BACGE,EAAKa,KAAI,SAACC,GAAD,OACR,oBACE,UAAQ,OADV,SAIGA,GAFIA,eAzGnB,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2709a1d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 'none':\n        return 0;\n      case 'alphabet':\n        return a.localeCompare(b);\n      case 'length':\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  sortAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const data = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-info',\n                { 'is-light': sortType !== SortType.ALPHABET },\n              )\n            }\n            onClick={() => {\n              this.sortAlphabet();\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-success',\n                { 'is-light': sortType !== SortType.LENGTH },\n              )\n            }\n            onClick={() => {\n              this.sortByLength();\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-warning',\n                { 'is-light': !isReversed },\n              )\n            }\n            onClick={() => {\n              this.reverse();\n            }}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  this.reset();\n                }}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          {data.map((item) => (\n            <li\n              data-cy=\"Good\"\n              key={item}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}